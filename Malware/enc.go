// svchost.exe 분석 중 - github.com/Oakak-Knab/enc.Encrypt 함수
// 실제 이용된 소스코드 분석

package enc

import (
	"crypto/aes"        // AES 대칭 암호화 알고리즘
	"crypto/cipher"     // GCM 암호화
	"crypto/rand"       // 난수 생성
	"io"
)

func Encrypt(plainText []byte, key []byte) ([]byte, error) {
    // 1. AES 암호화 블록 생성
    block, err := aes.NewCipher(key)                    // 제공된 키로 AES 암호화 블록 초기화
    if err != nil {                                     // 에러처리
        return nil, err                                 // 암호화 실패 시 에러 반환
    }
    
    // 2. GCM 모드 설정 (인증된 암호화)
    gcm, err := cipher.NewGCM(block)                    // Galois/Counter Mode 생성
    if err != nil {                                     // GCM 초기화 실패 시
        return nil, err                                 // 에러 반환
    }
    
    // 3. Nonce (Number used ONCE) 생성
    nonce := make([]byte, gcm.NonceSize())              // GCM 표준 nonce 크기 (12바이트) 배열 할당
    _, err = io.ReadFull(rand.Reader, nonce)            // 암호학적으로 안전한 랜덤 값으로 nonce 채우기
    if err != nil {                                     // 랜덤 생성 실패 시
        return nil, err                                 // 에러 반환
    }
    
    // 4. 실제 암호화 및 인증 태그 생성
    cypherText := gcm.Seal(nonce, nonce, plainText, nil)  // nonce + 암호화된데이터 + 인증태그 결합
    //                   dst   nonce   원본데이터   추가인증데이터(없음)
    
    return cypherText, nil
}
